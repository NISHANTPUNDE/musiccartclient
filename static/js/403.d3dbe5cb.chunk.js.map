{"version":3,"file":"static/js/403.d3dbe5cb.chunk.js","mappings":"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","sources":["components/Cart/CartProducts.jsx","components/Cart/ViewCart.jsx","components/Header/LogoCard.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeItemFromCart,updateItemQuantity } from \"../redux/slices/cartSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, onRemove,handleQuantityChange }) => (\r\n  \r\n  <Card sx={{ display: \"flex\",flexDirection: { xs: \"column\", sm: \"column\", md: \"row\" }, mb: 2 }}>\r\n    <CardMedia\r\n      component=\"img\"\r\n      sx={{ width: 150, objectFit: \"contain\" }}\r\n      image={item.image}\r\n      alt={item.name}\r\n    />\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{item.name}</Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          Colour: {item?.color}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          In Stock\r\n        </Typography>\r\n        <Typography variant=\"h6\" sx={{ mt: 1 }}>\r\n          ₹{item?.price}\r\n        </Typography>\r\n      </CardContent>\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", p: 2 }}>\r\n        <Typography>Quantity</Typography>\r\n        <Select\r\n          defaultValue={item?.quantity}\r\n          sx={{ ml: 2 }}\r\n          onChange={(e) => handleQuantityChange(item.id, e.target.value)}\r\n        >\r\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((quantity) => (\r\n            <MenuItem key={quantity} value={quantity}>\r\n              {quantity}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n    </Box>\r\n    <Box sx={{ display: \"flex\", alignItems: \"center\", p: 2 }}>\r\n      <Typography variant=\"h6\">₹{item.price*item.quantity}</Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"error\"\r\n        sx={{ ml: 2 }}\r\n        onClick={() => onRemove(item.id)}\r\n      >\r\n        REMOVE FROM CART\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nconst CartProducts = () => {\r\n  let Navigate = useNavigate();\r\n  const cartitem = useSelector((state) => state.cart.items);\r\n  const dispatch = useDispatch();\r\n  console.log(cartitem)\r\n  \r\n  const handleRemove = (id) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n  \r\n  const handleQuantityChange = (id, quantity) => {\r\n    dispatch(updateItemQuantity({ _id: id, quantity }));\r\n  };\r\n  \r\n  const cartItems = cartitem.map((product) => {\r\n    return {\r\n      name: product.Brand + \" \" + product.Model,\r\n      color: product.Colour,\r\n      price: product.Selling_Price,\r\n      image: product.imgSrc,\r\n      id: product._id,\r\n      quantity: product.quantity,\r\n    };\r\n  });\r\n\r\n  const totalMRP = cartItems.reduce((total, item) => total + (item.price*item.quantity), 0);\r\n  const discount = 0;\r\n  const convenienceFee = 45;\r\n  const totalAmount = totalMRP + convenienceFee;\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        My Cart\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={8}>\r\n          {cartItems.map((item, index) => (\r\n            <CartItem key={index} item={item} onRemove={handleRemove} handleQuantityChange={handleQuantityChange}/>\r\n          ))}\r\n          <Typography variant=\"h6\">{cartitem.length} Item(s)</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} display={cartitem.length == 0 ? \"none\" : \"grid\" }>\r\n          <Box sx={{ p: 2, border: \"1px solid #ddd\", borderRadius: 1 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              PRICE DETAILS\r\n            </Typography>\r\n            <Box\r\n              sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 1 }}\r\n            >\r\n              <Typography>Total MRP</Typography>\r\n              <Typography>₹{totalMRP}</Typography>\r\n            </Box>\r\n            <Box\r\n              sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 1 }}\r\n            >\r\n              <Typography>Discount on MRP</Typography>\r\n              <Typography>₹{discount}</Typography>\r\n            </Box>\r\n            <Box\r\n              sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 1 }}\r\n            >\r\n              <Typography>Convenience Fee</Typography>\r\n              <Typography>₹{convenienceFee}</Typography>\r\n            </Box>\r\n            <Box\r\n              sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 2 }}\r\n            >\r\n              <Typography variant=\"h6\">Total Amount</Typography>\r\n              <Typography variant=\"h6\">₹{totalAmount}</Typography>\r\n            </Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{ mt: 2 }}\r\n              onClick={() => Navigate(\"/checkout\")}\r\n            >\r\n              PLACE ORDER\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CartProducts;\r\n","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport LogoCard from '../Header/LogoCard'\r\nimport { Stack,Box,Button } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CartProducts from './CartProducts'\r\n\r\nconst ViewCart = () => {\r\n  \r\n  let navigate = useNavigate()\r\n  return (\r\n    <>\r\n    {/* <Header/> */}\r\n    <Stack mx={5} >\r\n      <LogoCard/>\r\n      <Box my={2}>\r\n                \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      backgroundColor: \"#2E0052\",\r\n                      color: \"#fff\",\r\n                      textTransform: \"capitalize\",\r\n                      borderRadius: \"10px\",\r\n                      width: \"180px\",\r\n                      fontStyle: \"Roboto\",\r\n                    }}\r\n                    onClick={() => navigate(-1)}\r\n                  >\r\n                    Back to Products\r\n                  </Button>\r\n                \r\n              </Box>\r\n    </Stack>\r\n    <Stack mx={5} display={{ xs: \"flex\", sm: \"flex\", md: \"block\", lg: \"block\" }}\r\n    flexDirection={{ xs: \"column\", sm: \"column\", md: \"row\", lg: \"row\" }}\r\n    >\r\n      <CartProducts/>\r\n    </Stack>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewCart","import React from 'react'\r\nimport {Stack,Box,Icon,Typography} from '@mui/material'\r\nimport MusicNoteIcon from \"@mui/icons-material/MusicNote\";\r\nimport { useLocation } from 'react-router-dom';\r\nconst LogoCard = () => {\r\n  let location = useLocation();\r\n  return (\r\n    <Stack mt={5}>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                flexDirection={\"row\"}\r\n                gap={\"10px\"}\r\n              >\r\n                <Box\r\n                  border={2}\r\n                  height={\"20px\"}\r\n                  width={\"20px\"}\r\n                  borderRadius={\"50%\"}\r\n                  padding={\"5px\"}\r\n                  bgcolor={\"#fff\"}\r\n                  borderColor={\"purple\"}\r\n                  display={\"flex\"}\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                >\r\n                  <Icon color=\"primary\">\r\n                    <MusicNoteIcon />\r\n                  </Icon>\r\n                </Box>\r\n                <Typography\r\n                  color={\"#2E0052\"}\r\n                  fontWeight={\"600\"}\r\n                  fontSize={\"30px\"}\r\n                >\r\n                  Musicart\r\n                </Typography>\r\n                <Typography ml={\"5px\"} color={\"#2E0052\"}>\r\n                  Home / {location.pathname.split(\"/\")[1]}\r\n                </Typography>\r\n              </Box>\r\n            </Stack>\r\n  )\r\n}\r\n\r\nexport default LogoCard"],"names":["CartItem","_ref","item","onRemove","handleQuantityChange","_jsxs","Card","sx","display","flexDirection","xs","sm","md","mb","children","_jsx","CardMedia","component","width","objectFit","image","alt","name","Box","flex","CardContent","Typography","variant","color","mt","price","alignItems","p","Select","defaultValue","quantity","ml","onChange","e","id","target","value","map","MenuItem","Button","onClick","CartProducts","Navigate","useNavigate","cartitem","useSelector","state","cart","items","dispatch","useDispatch","console","log","handleRemove","removeItemFromCart","updateItemQuantity","_id","cartItems","product","Brand","Model","Colour","Selling_Price","imgSrc","totalMRP","reduce","total","totalAmount","gutterBottom","Grid","container","spacing","index","length","border","borderRadius","justifyContent","fullWidth","ViewCart","navigate","_Fragment","Stack","mx","LogoCard","my","backgroundColor","textTransform","fontStyle","lg","location","useLocation","gap","height","padding","bgcolor","borderColor","Icon","MusicNoteIcon","fontWeight","fontSize","pathname","split"],"sourceRoot":""}